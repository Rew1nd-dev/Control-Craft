{
  "name": "物理刻CC",
  "icon": "vscontrolcraft:awe_in_wand",
  "category": "vscontrolcraft:features",
  "pages": [
    {
      "type": "patchouli:text",
      "text": "通常，Computer Craft的Lua脚本运行频率为20Hz，即每两个循环之间最小间距0.05s，这与游戏刻相同$(br2)Lua脚本作为控制逻辑时，其采样控制频率应该尽可能高，而物理刻的频率是60Hz，这是Lua脚本的频率的3倍之多，平均每3物理刻才施加一次控制，这限制了控制性能。"
    },
    {
      "type": "patchouli:text",
      "text": "在此之前，基于CCVS的ExtendShipAPI，使用API方法直接加力控制物理结构的Lua系统中，曾经使用过这样的方法试图提高控制频率：$(li)制作一个方块，每物理刻都向CC电脑发送物理刻事件（虚空动力，控制学Spinalyzer）$(li)在CC电脑中os.pullEvent()监听事件，然后基于事件返回值（通常是物理姿态），计算力$(li)调用API施加控制"
    },
    {
      "type": "patchouli:text",
      "text": "使用这种方法，可以提高指令的控制效果，但是假如你需要通过外置的方块施加控制而不是直接指令加力，这种方法就失效了，因为此前所有的控制媒介，如转速控制器，红石信号都只能在游戏刻更新，特别是转速控制器等外设，会阻塞Lua线程到下一个游戏刻"
    },
    {
      "type": "patchouli:text",
      "text": "控制学Config中有一项物理帧CC选项，当你开启这个选项，CC的Lua脚本将与物理刻同步而不是游戏刻，这时，你可以用CC调用控制学方块的外设方法而不会阻塞，控制学方块专门为这种应用场景作了设计，使得控制参数（转速，力度）能实际上以更高的频率更新"
    },
    {
      "type": "patchouli:text",
      "text": "但是当你开启该选项时，原本某些必须运行在游戏刻的外设，如转速控制器，可能会失效，以及千万不要调用那些需要访问世界的外设方法，如摄像头的clip系列方法，这会导致游戏卡死，如果你想要让摄像头进行射线检测，需要使用外设代理的callRemoteAsync()调用clipNew系列方法，并使用callRemote()调用latest获取返回值"
    },
    {
      "type": "patchouli:text",
      "text": "这个功能的潜在隐患还没有全部探明，大多数情况下，控制效果与物理结构上施加的阻尼有关，你可以使用重力锚施加位置，旋转阻尼来平滑你的控制过程，内置PID控制器的方块只需要接受目标角度，自动在物理刻完成控制过程，而不需要使用超频的cc来做这件事，因此，现阶段20Hz的控制完全够用"
    }

  ]
}